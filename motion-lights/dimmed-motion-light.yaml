blueprint:
  name: Dimmed Motion-activated Light
  description: Turn on a light when motion is detected, and will dim down when no activity is detected anymore.
  domain: automation
  input:
    motion_entity:
      name: Motion Sensor
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    light_target:
      name: Light
      selector:
        target:
          entity:
            domain: light
    dim_wait:
      name: Wait Time Before Dim
      description: Time to the light will dim after last motion is detected.
      default: 120
      selector:
        number:
          min: 0
          max: 1800
          unit_of_measurement: seconds
    no_motion_wait:
      name: Wait time
      description: Time to leave the light on after last motion is detected.
      default: 240
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds
    motion_brightness:
      name: Motion brigthness
      description: Brightness to use on the bulb when motion is detected.
      default: 100
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    no_motion_brightness:
      name: No motion brigthness
      description: Brightness to use on the bulb when motion is not detected anymore.
      default: 40
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"

# If motion is detected within the delay,
# we restart the script.
mode: restart
max_exceeded: silent

variables:
  lights: !input light_target
  no_motion_wait_input: !input no_motion_wait
  dim_wait_input: !input dim_wait
  no_motion_wait: "{{ max(no_motion_wait_input, dim_wait_input) - min(no_motion_wait_input, dim_wait_input) }}"

trigger:
  platform: state
  entity_id: !input motion_entity
  from: "off"
  to: "on"

action:
  # On
  - alias: "Turn on the light"
    service: light.turn_on
    target: !input light_target
    data:
      brightness_pct: !input motion_brightness
      transition: 1
  - alias: "Wait until there is no motion from device"
    wait_for_trigger:
      platform: state
      entity_id: !input motion_entity
      from: "on"
      to: "off"
  # Dim
  - alias: "Wait the number of seconds that has been set before dimming"
    delay: !input dim_wait
  - alias: "Do not turn on again if off"
    if:
      - "{{ (expand(lights.entity_id) if 'entity_id' in lights else []) | selectattr('state', 'match', 'on') | list | count == 0 }}"
      - "{{ (expand(area_entities(lights.area_id)) if 'area_id' in lights else []) | selectattr('domain', 'match', 'light') | selectattr('state', 'match', 'on') | list | count == 0 }}"
    then:
      - stop: "All lights are off, so we won't turn them on again."
  - alias: "Dim the light"
    service: light.turn_on
    target: !input light_target
    data:
      brightness_pct: !input no_motion_brightness
      transition: 1
  # Off
  - alias: "Wait the number of seconds that has been set before off"
    delay: "{{ no_motion_wait }}"
  - alias: "Turn off the light"
    service: light.turn_off
    target: !input light_target
